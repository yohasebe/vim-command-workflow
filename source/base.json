{
  "title": "Base",
  "workingWithMultipleFiles": {
    "title": "Working with multiple files",
    "commands": {
      "colonWa": "Save all open buffers at once"
    }
  },
  "searchAndReplace": {
    "commands": {
      "asterisk": "Next whole word under cursor",
      "hash": "Previous whole word under cursor"
    }
  },
  "marks": {
    "commands": {
      "gf": "Go to file in cursor"
    }
  },
  "misc": {
    "title": "Miscellaneous",
    "commands": {
      "Ctrla": "Increment number",
      "Ctrlx": "Decrement number",
      "gv": "Re-select last selected block of text",
      "CtrlrEqual": "Insert the result of an expression at the cursor",
      "setFencUtf": "Change file encoding to UTF-8"
    }
  },
  "spell": {
    "title": "Spell checking",
    "commands": {
      "setSpellEnUs": "Turn on US English spell checking",
      "setNoSpell": "Turn off spell checking",
      "closeBrackets": "Move to next misspelled word after the cursor",
      "openBrackets": "Move to previous misspelled word before the cursor",
      "z=": "Suggest spellings for the word under/after the cursor",
      "zg": "Add word to spell list",
      "zw": "Mark word as bad/mispelling",
      "zu": "Suggest words for bad word under cursor from spell file"
    }
  },
  "regex": {
    "title": "Regex",
    "commands": {
      "backslash": "Escape next character",
      "hat": "Start-of­-line",
      "dollar": "End-of-­line",
      "dot": "Any char",
      "star": "0 or more quantifier",
      "tilde": "Match last given substitute string",
      "range": "Match range",
      "notRange": "Not range",
      "ampersand": "In replacement: insert <pattern>",
      "backSlashLessThan": "Beginning of a word",
      "backSlashGreaterThan": "End of word",
      "group": "Group",
      "separator": "Separate alternative",
      "anyChar": "Any single char or end-of­line",
      "oneOrMore": "1 or more quantifier",
      "backSlashEqual": "0 or 1 quantifier",
      "backSlashQuestion": "0 or 1 quantifier",
      "nToM": "n to m quantifier",
      "nQuantifier": "n quantifier",
      "atLeastN": "at least n quantifier",
      "zeroToM": "0 to m quantifier",
      "delAllLinesMatching": "delete all lines matching pattern",
      "delAllLinesNotMatching": "delete all lines NOT matching <pattern>",
      "deleteEmptyLines": "delete empty lines",
      "replacePattern": "Replace <pattern> by 'new <pattern>'",
      "replacePatternByRegister": "Replace <pattern> by content of register",
      "countNumOccurrence": "Count number of occurrence of <pattern>",
      "matchStart": "Match start",
      "matchEnd": "Match end",
      "positiveLookBehind": "Positive look behind to find <pattern>",
      "positiveLookAhead": "Positive look ahead to find <pattern>",
      "negativeLookBehind": "Negative look behind to find <pattern>",
      "negativeLookAhead": "Negative look ahead to find <pattern>",
      "nonGreedyQuantifier": "Non-greedy 0 or more quantifier" 
    }
  }
}
